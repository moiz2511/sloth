{"version":3,"sources":["logo.svg","constants/user.constants.js","constants/products.constants.js","constants/form.constants.js","constants/form.product.constants.js","constants/index.js","actions/user.actions.js","actions/form.actions.js","components/BackgroundImage/BackgroundImage.js","pages/Spin/Spin.js","pages/Form/Form.js","pages-admin/Login/Login.js","pages-admin/Partials/NavbarPartial.js","pages-admin/Partials/CsvImport.js","pages-admin/Dashboard/Dashboard.js","pages-admin/FormList/FormList.js","App.js","serviceWorker.js","reducers/index.js","reducers/userReducer.js","reducers/formReducer.js","index.js"],"names":["module","exports","userConstants","napaProducts","formConstants","formProducts","apiUrl","doLogin","data","dispatch","type","axios","post","then","status","success","localStorage","setItem","JSON","stringify","id","_id","name","email","failure","message","catch","error","submitUserData","updateUserData","userDataList","get","deleteUserData","submitFormData","updateFormData","formDataList","deleteFormData","className","style","filter","this","props","blur","Component","defaultProps","REEL_RADIUS","checkboxwait","Spin","state","affiliatedWithNapaStore","anInstallerCustomer","fullName","emailAddress","storeNumber","servicingDC","storeName","storeAddress","businessName","businessAddress","city","stateName","zip","napaNewElectrical","wilson","premiumPlus","premiumSteering","powerSupport","newSteering","formErrors","isShowForm","showVideo","disableSpin","screenType","items","setScreenOrientation","window","matchMedia","matches","console","log","innerWidth","innerHeight","setUpSlots","createSlots","$","ring","getSeed","i","slot","document","createElement","transform","append","Math","floor","random","spin","setState","maxTimerDelay","oldSeed","oldClass","attr","length","parseInt","slice","seed","delay","css","setTimeout","getElementById","play","errors","validateEmail","Object","keys","postData","user_type","products","push","join","actions","dataAddingStatus","handleProductChange","e","product","newState","nextProps","nextContext","addEventListener","test","String","toLowerCase","dataAddingError","active","spinner","text","onLoad","isImageLoad","opacity","src","onClick","controls","autoPlay","muted","onEnded","sm","md","checked","onChange","value","target","Fragment","theme","pill","connect","user","Form","oeTurboPowerTurboChargers","napaStartersAndAlternators","napaPowerSport","premiumNapaSteering","napaNewSteering","form","Login","userName","userPassword","loading","submitted","password","loginStatus","history","userStr","getItem","parse","loginError","title","htmlFor","block","squared","NavbarPartial","expand","href","navbar","removeItem","prop","CsvImport","csvData","asyncOnClick","filename","Dashboard","showConfirmDeleteModal","showUserDataModel","selectedUserData","getUsersDataList","userDataId","dataDeleteStatus","dataUpdateStatus","closeUserModal","showEditUserDataModal","states","store_number","servicing_dc","store_name","store_address","business_name","business_address","products_buying","split","map","formatCsvExport","list","formattedData","key","moment","Created_date","format","dataListStatus","dataListError","dataDeleteError","dataUpdateError","icon","faEdit","faTrash","centered","open","toggle","FormList","supportsHistory","App","meta","charset","viewport","forceRefresh","render","location","pathname","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","exact","path","component","Boolean","hostname","match","combineReducers","action","rootElement","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.254eca9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    USERDATA_SUBMIT_REQUEST: 'USERDATA_SUBMIT_REQUEST',\n    USERDATA_SUBMIT_SUCCESS: 'USERDATA_SUBMIT_SUCCESS',\n    USERDATA_SUBMIT_FAILURE: 'USERDATA_SUBMIT_FAILURE',\n\n    USERDATA_LIST_REQUEST: 'USERDATA_LIST_REQUEST',\n    USERDATA_LIST_SUCCESS: 'USERDATA_LIST_SUCCESS',\n    USERDATA_LIST_FAILURE: 'USERDATA_LIST_FAILURE',\n\n\n    USERDATA_UPDATE_REQUEST: 'USERDATA_UPDATE_REQUEST',\n    USERDATA_UPDATE_SUCCESS: 'USERDATA_UPDATE_SUCCESS',\n    USERDATA_UPDATE_FAILURE: 'USERDATA_UPDATE_FAILURE',\n\n    USERDATA_DELETE_REQUEST: 'USERDATA_DELETE_REQUEST',\n    USERDATA_DELETE_SUCCESS: 'USERDATA_DELETE_SUCCESS',\n    USERDATA_DELETE_FAILURE: 'USERDATA_DELETE_FAILURE',\n};\n","export const napaProducts = {\n    napaNewElectrical: 'OE-Turbopower Turbos',\n    wilson: 'Wilson',\n    premiumPlus: 'NAPA Power Premium Plus',\n    premiumSteering: 'Premium NAPA Steering',\n    powerSupport: 'NAPA Power Sport',\n    newSteering: 'NAPA NEW Steering'\n};\n","export const formConstants = {\r\n\r\n    FORMDATA_SUBMIT_REQUEST: 'FORMDATA_SUBMIT_REQUEST',\r\n    FORMDATA_SUBMIT_SUCCESS: 'FORMDATA_SUBMIT_SUCCESS',\r\n    FORMDATA_SUBMIT_FAILURE: 'FORMDATA_SUBMIT_FAILURE',\r\n\r\n    FORMDATA_LIST_REQUEST: 'FORMDATA_LIST_REQUEST',\r\n    FORMDATA_LIST_SUCCESS: 'FORMDATA_LIST_SUCCESS',\r\n    FORMDATA_LIST_FAILURE: 'FORMDATA_LIST_FAILURE',\r\n\r\n    FORMDATA_UPDATE_REQUEST: 'FORMDATA_UPDATE_REQUEST',\r\n    FORMDATA_UPDATE_SUCCESS: 'FORMDATA_UPDATE_SUCCESS',\r\n    FORMDATA_UPDATE_FAILURE: 'FORMDATA_UPDATE_FAILURE',\r\n\r\n    FORMDATA_DELETE_REQUEST: 'FORMDATA_DELETE_REQUEST',\r\n    FORMDATA_DELETE_SUCCESS: 'FORMDATA_DELETE_SUCCESS',\r\n    FORMDATA_DELETE_FAILURE: 'FORMDATA_DELETE_FAILURE',\r\n};\r\n","export const formProducts = {\r\n    oeTurboPowerTurboChargers: 'OE-Turbopower Turbos',\r\n    napaStartersAndAlternators: 'NAPA Starters & Alternators',\r\n    napaPowerSport: 'NAPA Power Sport',\r\n    wilson: 'Wilson',\r\n    premiumNapaSteering: 'Premium NAPA Steering',\r\n    napaNewSteering: 'NAPA New Steering'\r\n};\r\n","export * from './user.constants';\nexport * from './products.constants';\nexport * from './form.constants';\nexport * from './form.product.constants';\n export const apiUrl = 'http://16.16.50.103:5000/api/';\n//export const apiUrl = 'http://localhost:5000/api/';\n","import axios from 'axios';\nimport {userConstants, apiUrl} from '../constants';\n\n\nexport const doLogin = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}login`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                    localStorage.setItem('user_data', JSON.stringify({\n                        id: data.data._id,\n                        name: data.data.name,\n                        email: data.data.email\n                    }));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.LOGIN_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.LOGIN_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.LOGIN_FAILURE, error}\n    }\n};\n\nexport const submitUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}addUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(null));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_SUBMIT_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_SUBMIT_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_SUBMIT_FAILURE, error}\n    }\n};\n\nexport const updateUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}updateUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_UPDATE_REQUEST}\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_UPDATE_SUCCESS, data}\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_UPDATE_FAILURE, error}\n    }\n};\n\n\nexport const userDataList = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.get(`${apiUrl}userDataList`)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_LIST_REQUEST};\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_LIST_SUCCESS, data};\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_LIST_FAILURE, error};\n    }\n};\n\nexport const deleteUserData = (data) => {\n    return (dispatch) => {\n        dispatch(request());\n        return axios.post(`${apiUrl}deleteUserData`, data)\n            .then(({data}) => {\n                if (data.status) {\n                    dispatch(success(data.data));\n                } else {\n                    dispatch(failure(data.message));\n                }\n            })\n            .catch(error => {\n                throw(error);\n                dispatch(failure(error.message));\n            });\n    }\n\n    function request() {\n        return {type: userConstants.USERDATA_DELETE_REQUEST};\n    }\n\n    function success(data) {\n        return {type: userConstants.USERDATA_DELETE_SUCCESS, data};\n    }\n\n    function failure(error) {\n        return {type: userConstants.USERDATA_DELETE_FAILURE, error};\n    }\n};\n\n\n\n","import axios from 'axios';\r\nimport {formConstants, apiUrl} from '../constants';\r\n\r\nexport const submitFormData = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(request());\r\n        return axios.post(`${apiUrl}addFormData`, data)\r\n            .then(({data}) => {\r\n                if (data.status) {\r\n                    dispatch(success(null));\r\n                } else {\r\n                    dispatch(failure(data.message));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                throw(error);\r\n                dispatch(failure(error.message));\r\n            });\r\n    }\r\n\r\n    function request() {\r\n        return {type: formConstants.FORMDATA_SUBMIT_REQUEST}\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: formConstants.FORMDATA_SUBMIT_SUCCESS, data}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: formConstants.FORMDATA_SUBMIT_FAILURE, error}\r\n    }\r\n};\r\n\r\nexport const updateFormData = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(request());\r\n        return axios.post(`${apiUrl}updateFormData`, data)\r\n            .then(({data}) => {\r\n                if (data.status) {\r\n                    dispatch(success(data.data));\r\n                } else {\r\n                    dispatch(failure(data.message));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                throw(error);\r\n                dispatch(failure(error.message));\r\n            });\r\n    }\r\n\r\n    function request() {\r\n        return {type: formConstants.FORMDATA_UPDATE_REQUEST}\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: formConstants.FORMDATA_UPDATE_SUCCESS, data}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: formConstants.FORMDATA_UPDATE_FAILURE, error}\r\n    }\r\n};\r\n\r\n\r\nexport const formDataList = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(request());\r\n        return axios.get(`${apiUrl}formDataList`)\r\n            .then(({data}) => {\r\n                if (data.status) {\r\n                    dispatch(success(data.data));\r\n                } else {\r\n                    dispatch(failure(data.message));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                throw(error);\r\n                dispatch(failure(error.message));\r\n            });\r\n    }\r\n\r\n    function request() {\r\n        return {type: formConstants.FORMDATA_LIST_REQUEST}\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: formConstants.FORMDATA_LIST_SUCCESS, data}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: formConstants.FORMDATA_LIST_FAILURE, error}\r\n    }\r\n};\r\n\r\nexport const deleteFormData = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(request());\r\n        return axios.post(`${apiUrl}deleteFormData`, data)\r\n            .then(({data}) => {\r\n                if (data.status) {\r\n                    dispatch(success(data.data));\r\n                } else {\r\n                    dispatch(failure(data.message));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                throw(error);\r\n                dispatch(failure(error.message));\r\n            });\r\n    }\r\n\r\n    function request() {\r\n        return {type: formConstants.FORMDATA_DELETE_REQUEST}\r\n    }\r\n\r\n    function success(data) {\r\n        return {type: formConstants.FORMDATA_DELETE_SUCCESS, data}\r\n    }\r\n\r\n    function failure(error) {\r\n        return {type: formConstants.FORMDATA_DELETE_FAILURE, error}\r\n    }\r\n};\r\n\r\n","import React, {Component} from 'react';\nimport \"./BackgroundImage.css\";\n\nexport default class BackgroundImage extends Component {\n    render() {\n        return (\n            <div className={\"bg-image\"} style={{filter:\"blur(\"+this.props.blur+\"px)\"}}></div>\n        );\n    }\n}\n\nBackgroundImage.defaultProps = {\n    blur:1\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\nimport \"./Spin.scss\";\nimport {apiUrl, napaProducts} from \"../../constants\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport {\n    FormCheckbox,\n    FormInput,\n    Container,\n    Row,\n    Col,\n    Button,\n    Alert, CardBody\n} from \"shards-react\";\nimport $ from \"jquery\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nconst SLOTS_PER_REEL = 12;\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\n// current settings give a value of 149, rounded to 150\nlet REEL_RADIUS = 500;\nlet checkboxwait = false;\n\nclass Spin extends Component {\n    state = {\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        city: \"\",\n        stateName: \"\",\n        zip: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null,\n\n        isShowForm: true,\n\n        showVideo: false,\n        disableSpin: false,\n        screenType: 'spin',\n        items: ['item1.png', 'item2.png', 'item3.png', 'item4.png', 'item5.png']\n    };\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n    }\n\n    componentWillMount() {\n\n        window.addEventListener('orientationchange', this.setScreenOrientation);\n        this.setScreenOrientation();\n    }\n\n    setScreenOrientation = () => {\n        if (window.matchMedia(\"(orientation: portrait)\").matches) {\n            console.log('orientation: portrait');\n            if (window.innerWidth <= 319) {\n                REEL_RADIUS = 105;\n            } else if (window.innerWidth >= 320 && window.innerWidth <= 400) {\n                REEL_RADIUS = 120;\n            } else if (window.innerWidth >= 401 && window.innerWidth <= 767) {\n                REEL_RADIUS = 150;\n            } else if (window.innerWidth >= 768 && window.innerWidth <= 1024) {\n                REEL_RADIUS = 300;\n            } else if (window.innerWidth >= 1025) {\n                REEL_RADIUS = 800;\n            }\n        }\n\n        if (window.matchMedia(\"(orientation: landscape)\").matches) {\n            console.log('orientation: landscape');\n            if (window.innerHeight <= 319) {\n                REEL_RADIUS = 105;\n            } else if (window.innerHeight >= 320 && window.innerHeight <= 400) {\n                REEL_RADIUS = 120;\n            } else if (window.innerHeight >= 401 && window.innerHeight <= 767) {\n                REEL_RADIUS = 300;\n            } else if (window.innerHeight >= 768 && window.innerHeight <= 1024) {\n                REEL_RADIUS = 300;\n            } else if (window.innerHeight >= 1025) {\n                REEL_RADIUS = 800;\n            }\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    setUpSlots = () => {\n        this.createSlots($('#ring1'));\n        this.createSlots($('#ring2'));\n        this.createSlots($('#ring3'));\n    }\n\n\n    createSlots = (ring) => {\n\n        var slotAngle = 360 / SLOTS_PER_REEL;\n\n        var seed = this.getSeed();\n        seed = 2;\n\n        for (var i = 0; i < SLOTS_PER_REEL; i++) {\n            var slot = document.createElement('div');\n\n            slot.className = 'slot';\n\n            // compute and assign the transform for this slot\n            var transform = 'rotateX(' + (slotAngle * i) + 'deg) translateZ(' + REEL_RADIUS + 'px)';\n\n            slot.style.transform = transform;\n\n            // setup the number to show inside the slots\n            // the position is randomized to\n\n            // var content = $(slot).append('<p>' + ((seed + i) % 12) + '</p>');\n            var content = $(slot).append('<img src=\"./images/' + this.state.items[((seed + i) % 5)] + '\" class=\"spin-item\"/>');\n\n            // add the poster to the row\n            ring.append(slot);\n        }\n    }\n\n    getSeed = () => {\n        // generate random number smaller than 13 then floor it to settle between 0 and 12 inclusive\n        return Math.floor(Math.random() * (SLOTS_PER_REEL));\n    }\n\n    spin = () => {\n        this.setState({disableSpin: true});\n        var timer = 2;\n        var maxTimerDelay = 0;\n        //var txt = 'seeds: ';\n        for (var i = 1; i < 4; i++) {\n            var oldSeed = -1;\n            /*\n            checking that the old seed from the previous iteration is not the same as the current iteration;\n            if this happens then the reel will not spin at all\n            */\n            var oldClass = $('#ring' + i).attr('class');\n            if (oldClass.length > 4) {\n                oldSeed = parseInt(oldClass.slice(10));\n                console.log(oldSeed);\n            }\n            var seed = this.getSeed();\n            while (oldSeed == seed) {\n                seed = this.getSeed();\n            }\n\n            if (this.state.screenType === \"spinagainlast\") {\n                seed = 1;\n            }\n\n            var delay = timer + i * 0.5;\n            $('#ring' + i)\n                .css('animation', 'back-spin 1s, spin-' + seed + ' ' + (delay) + 's')\n                .attr('class', 'ring spin-' + seed);\n            console.log(\"delay\" + delay);\n            if (maxTimerDelay < delay) {\n                maxTimerDelay = delay;\n            }\n        }\n        setTimeout(() => {\n\n            if (this.state.screenType == 'spinagain') {\n                this.setState({disableSpin: false, showVideo: true, screenType: 'spinagainlast'});\n                setTimeout(() => {\n                    document.getElementById('trainingvideoview').play();\n                }, 300);\n            } else if (this.state.screenType == 'spinagainlast') {\n                this.setState({disableSpin: true, screenType: 'finalscreen'});\n                setTimeout(() => {\n                    this.setState({disableSpin:false, isShowForm: true, screenType: 'spin'}, () => {\n                        this.setUpSlots();\n                    });\n                }, 8 * 1000);\n            } else {\n                this.setState({disableSpin: false, screenType: 'spinagain'});\n            }\n\n        }, maxTimerDelay * 1000);\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    submitUserData = () => {\n\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress, city, stateName, zip} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {businessName, businessAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n\n\n        var errors = {};\n\n        if (!fullName) {\n            errors['name'] = \"Full name is required\";\n        }\n        if (!city) {\n            errors['city'] = \"City is required\";\n        }\n        if (!stateName) {\n            errors['state'] = \"State  is required\";\n        }\n        if (!zip) {\n            errors['zip'] = \"Zip is required\";\n        }\n\n        if (!emailAddress) {\n            errors['email'] = \"Email address is required\";\n        } else if (!this.validateEmail(emailAddress)) {\n            errors['email'] = \"Email address is not valid\";\n        }\n\n        if (affiliatedWithNapaStore) {\n            if (!storeNumber) {\n                errors['store_number'] = \"Store number is required\";\n            }\n            if (!servicingDC) {\n                errors['servicing_dc'] = \"Servicing DC is required\";\n            }\n            if (!storeName) {\n                errors['store_name'] = \"Store name is required\";\n            }\n            if (!storeAddress) {\n                errors['store_address'] = \"Store street is required\";\n            }\n        } else if (anInstallerCustomer) {\n            if (!businessName) {\n                errors['business_name'] = \"Business name is required\";\n            }\n            if (!businessAddress) {\n                errors['business_address'] = \"Business street is required\";\n            }\n        } else {\n            errors['user_type'] = \"Select who are you?\";\n        }\n\n\n        if (Object.keys(errors).length == 0) {\n            let postData = {\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n                name: fullName,\n                email: emailAddress,\n                city: city,\n                state: stateName,\n                zip: zip,\n            };\n            if (affiliatedWithNapaStore) {\n                postData['store_number'] = storeNumber;\n                postData['servicing_dc'] = servicingDC;\n                postData['store_name'] = storeName;\n                postData['store_address'] = storeAddress;\n            } else if (anInstallerCustomer) {\n                postData['business_name'] = businessName;\n                postData['business_address'] = businessAddress;\n            }\n\n            let products = [];\n            if (napaNewElectrical) {\n                products.push(napaProducts.napaNewElectrical);\n            }\n            if (wilson) {\n                products.push(napaProducts.wilson);\n            }\n            if (premiumPlus) {\n                products.push(napaProducts.premiumPlus);\n            }\n            if (premiumSteering) {\n                products.push(napaProducts.premiumSteering);\n            }\n            if (powerSupport) {\n                products.push(napaProducts.powerSupport);\n            }\n            if (newSteering) {\n                products.push(napaProducts.newSteering);\n            }\n\n            postData['products_buying'] = products.join(\"|\");\n\n            const {dispatch} = this.props;\n            dispatch(actions.submitUserData(postData)).then(() => {\n                setTimeout(() => {\n                    const {dataAddingStatus} = this.props;\n                    if (dataAddingStatus === 1) {\n                        this.setState({\n                            isShowForm: false,\n                            screenType: 'spin',\n\n                            affiliatedWithNapaStore: false,\n                            anInstallerCustomer: false,\n\n                            fullName: \"\",\n                            emailAddress: \"\",\n\n                            storeNumber: \"\",\n                            servicingDC: \"\",\n                            storeName: \"\",\n                            storeAddress: \"\",\n\n                            city: \"\",\n                            stateName: \"\",\n                            zip: \"\",\n\n                            businessName: \"\",\n                            businessAddress: \"\",\n\n                            napaNewElectrical: false,\n                            wilson: false,\n                            premiumPlus: false,\n                            premiumSteering: false,\n                            powerSupport: false,\n                            newSteering: false,\n                            formErrors: null,\n                        });\n                    }\n                }, 500);\n            });\n        } else {\n            this.setState({formErrors: errors});\n        }\n    }\n\n    handleProductChange = (e, product) => {\n        if (!checkboxwait) {\n            checkboxwait = true;\n            const newState = {};\n            newState[product] = !this.state[product];\n            this.setState({...this.state, ...newState});\n            setTimeout(() => {\n                checkboxwait = false;\n            }, 200);\n        }\n    }\n\n    render() {\n        const {dataAddingStatus, dataAddingError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={dataAddingStatus == -1}\n                spinner\n                text='Connecting....'\n            >\n                <div className=\"spin-page-container\">\n                    <div className={'slot-machine-container'}>\n\n                        <img\n                            onLoad={() => {\n                                this.setState({isImageLoad: true}, () => {\n                                    this.setUpSlots();\n                                });\n                            }}\n                            className={'spin-bg-image'}\n                            style={{opacity: (this.state.screenType == 'spin') ? 1 : 0}}\n                            src={'images/spinbackground.png'}/>\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/spinagainbackground.png'}\n                            style={{opacity: (this.state.screenType == 'spinagain' || this.state.screenType == 'spinagainlast') ? 1 : 0}}\n                        />\n\n                        <img\n                            className={'spin-bg-image'}\n                            src={'images/finalscreen.png'}\n                            style={{opacity: (this.state.screenType == 'finalscreen') ? 1 : 0}}\n                        />\n\n                        {/*{*/}\n                        {/*    (this.state.screenType == 'finalscreen') && (*/}\n                        {/*        <Button className={'start-over-btn'} pill onClick={() => {*/}\n                        {/*            this.setState({disableSpin: false, isShowForm: true, screenType: 'spin'}, () => {*/}\n                        {/*                this.setUpSlots();*/}\n                        {/*            });*/}\n                        {/*        }}>Start Over</Button>*/}\n                        {/*    )*/}\n                        {/*}*/}\n\n\n                        {\n                            (this.state.isImageLoad && (this.state.screenType === 'spinagain' || this.state.screenType === 'spinagainlast' || this.state.screenType === 'spin')) && (\n                                <div id=\"rotate\">\n                                    <div id=\"ring1\" className=\"ring\"></div>\n                                    <div id=\"ring2\" className=\"ring\"></div>\n                                    <div id=\"ring3\" className=\"ring\"></div>\n                                </div>\n                            )\n                        }\n\n\n                        {\n                            !this.state.disableSpin && (\n                                <div className={'spin-btn'} onClick={this.spin}></div>\n                            )\n                        }\n\n                    </div>\n\n                    {\n                        this.state.showVideo && (\n                            <div className={'video-container'}>\n                                <video controls={false} className={'video-view'} autoPlay muted id={'trainingvideoview'}\n                                       onEnded={() => {\n                                           this.setState({showVideo: false});\n                                       }}>\n                                    <source src=\"videos/NAPA.mp4\" type=\"video/mp4\"/>\n                                </video>\n                            </div>\n                        )\n                    }\n\n\n                    {\n                        this.state.isShowForm && (\n                            <div className=\"container\">\n                                <div className={'form-container'}>\n                                    <Container className={'heading-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading1'}>PRE-QUALIFY FOR THE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading2'}>BIG RACE</div>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <h4 className={'heading3'}>\n                                                    To begin, please answer a few simple questions:\n                                                </h4>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n                                    <Container className={'option-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    ARE YOU?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.affiliatedWithNapaStore}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: true,\n                                                            anInstallerCustomer: false\n                                                        });\n                                                    }}\n                                                >affiliated with a NAPA store</FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.anInstallerCustomer}\n                                                    onChange={e => {\n                                                        this.setState({\n                                                            affiliatedWithNapaStore: false,\n                                                            anInstallerCustomer: true\n                                                        });\n                                                    }}\n                                                >\n                                                    an installer customer\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['user_type']) && (\n                                                <Row>\n                                                    <Col sm={12}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['user_type']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                    </Container>\n\n\n                                    <Container className={'input-form'}>\n                                        <Row>\n                                            <Col sm={12} md={3}>\n                                                <span className={'input-label'}>Full Name</span>\n                                            </Col>\n                                            <Col sm={12} md={9}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    value={this.state.fullName}\n                                                    onChange={(e) => this.setState({fullName: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['name']) && (\n                                                <Row>\n                                                    <Col sm={12} md={3}></Col>\n                                                    <Col sm={12} md={9}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['name']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                        <Row>\n                                            <Col sm={12} md={3}>\n                                                <span className={'input-label'}>Email address</span>\n                                            </Col>\n                                            <Col sm={12} md={9}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    type={\"email\"}\n                                                    value={this.state.emailAddress}\n                                                    onChange={(e) => this.setState({emailAddress: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['email']) && (\n                                                <Row>\n                                                    <Col sm={12} md={3}></Col>\n                                                    <Col sm={12} md={9}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['email']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                        {\n                                            this.state.affiliatedWithNapaStore && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Store number</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeNumber}\n                                                                onChange={(e) => this.setState({storeNumber: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_number']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_number']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Servicing DC</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.servicingDC}\n                                                                onChange={(e) => this.setState({servicingDC: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['servicing_dc']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Store Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeName}\n                                                                onChange={(e) => this.setState({storeName: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_name']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_name']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Store street</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.storeAddress}\n                                                                onChange={(e) => this.setState({storeAddress: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['store_address']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['store_address']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                        {\n                                            this.state.anInstallerCustomer && (\n                                                <React.Fragment>\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Business Name</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.businessName}\n                                                                onChange={(e) => this.setState({businessName: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['business_name']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['business_name']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n\n                                                    <Row>\n                                                        <Col sm={12} md={3}>\n                                                            <span className={'input-label'}>Business Street</span>\n                                                        </Col>\n                                                        <Col sm={12} md={9}>\n                                                            <FormInput\n                                                                className=\"input-field\"\n                                                                value={this.state.businessAddress}\n                                                                onChange={(e) => this.setState({businessAddress: e.target.value})}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    {\n                                                        (this.state.formErrors && this.state.formErrors['business_address']) && (\n                                                            <Row>\n                                                                <Col sm={12} md={3}></Col>\n                                                                <Col sm={12} md={9}>\n                                                                    <div className={'input-error'}>\n                                                                        {this.state.formErrors['business_address']}\n                                                                    </div>\n                                                                </Col>\n                                                            </Row>\n                                                        )\n                                                    }\n                                                </React.Fragment>\n                                            )\n                                        }\n\n\n                                        <Row>\n                                            <Col sm={12} md={3}>\n                                                <span className={'input-label'}>City</span>\n                                            </Col>\n                                            <Col sm={12} md={9}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    value={this.state.city}\n                                                    onChange={(e) => this.setState({city: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['city']) && (\n                                                <Row>\n                                                    <Col sm={12} md={3}></Col>\n                                                    <Col sm={12} md={9}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['city']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n                                        <Row>\n                                            <Col sm={12} md={3}>\n                                                <span className={'input-label'}>State</span>\n                                            </Col>\n                                            <Col sm={12} md={9}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    value={this.state.stateName}\n                                                    onChange={(e) => this.setState({stateName: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['state']) && (\n                                                <Row>\n                                                    <Col sm={12} md={3}></Col>\n                                                    <Col sm={12} md={9}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['state']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n\n                                        <Row>\n                                            <Col sm={12} md={3}>\n                                                <span className={'input-label'}>Zip</span>\n                                            </Col>\n                                            <Col sm={12} md={9}>\n                                                <FormInput\n                                                    className=\"input-field\"\n                                                    value={this.state.zip}\n                                                    onChange={(e) => this.setState({zip: e.target.value})}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        {\n                                            (this.state.formErrors && this.state.formErrors['zip']) && (\n                                                <Row>\n                                                    <Col sm={12} md={3}></Col>\n                                                    <Col sm={12} md={9}>\n                                                        <div className={'input-error'}>\n                                                            {this.state.formErrors['zip']}\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            )\n                                        }\n\n\n                                    </Container>\n\n\n                                    <Container className={'product-choose-form'}>\n                                        <Row>\n                                            <Col>\n                                                <div className={'heading4'}>\n                                                    WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                                </div>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.napaNewElectrical}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'napaNewElectrical');\n                                                    }}\n                                                >\n                                                    {napaProducts.napaNewElectrical}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.wilson}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'wilson');\n                                                    }}\n                                                >\n                                                    {napaProducts.wilson}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumPlus}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'premiumPlus');\n                                                    }}\n                                                >\n                                                    {napaProducts.premiumPlus}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.premiumSteering}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'premiumSteering');\n                                                    }}\n                                                >\n                                                    {napaProducts.premiumSteering}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.powerSupport}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'powerSupport');\n                                                    }}\n                                                >\n                                                    {napaProducts.powerSupport}\n                                                </FormCheckbox>\n                                            </Col>\n                                            <Col sm={12} md={6}>\n                                                <FormCheckbox\n                                                    checked={this.state.newSteering}\n                                                    onChange={e => {\n                                                        this.handleProductChange(e, 'newSteering');\n                                                    }}\n                                                >\n                                                    {napaProducts.newSteering}\n                                                </FormCheckbox>\n                                            </Col>\n                                        </Row>\n\n                                    </Container>\n\n                                    {\n                                        dataAddingStatus == 0 && (\n                                            <Alert theme=\"danger\">{dataAddingError}</Alert>\n                                        )\n                                    }\n\n                                    <Container className={'btn-view'}>\n                                        <Row>\n                                            <Col>\n                                                <Button className={'play-btn'} pill onClick={() => {\n                                                    this.submitUserData();\n                                                }}>Let's Play! >></Button>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n\n                </div>\n            </LoadingOverlay>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataAddingStatus, error} = state.user;\n    return {\n        dataAddingStatus,\n        dataAddingError: error\n    };\n}\n\nexport default connect(mapStateToProps)(Spin);\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport BackgroundImage from '../../components/BackgroundImage/BackgroundImage';\r\nimport \"../Spin/Spin.scss\";\r\nimport {apiUrl, formProducts} from \"../../constants\";\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\"\r\nimport {\r\n    FormCheckbox,\r\n    FormInput,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Alert, CardBody\r\n} from \"shards-react\";\r\nimport $ from \"jquery\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport {submitFormData} from \"../../actions\";\r\n\r\nconst SLOTS_PER_REEL = 12;\r\n// radius = Math.round( ( panelWidth / 2) / Math.tan( Math.PI / SLOTS_PER_REEL ) );\r\n// current settings give a value of 149, rounded to 150\r\nlet REEL_RADIUS = 500;\r\nlet checkboxwait = false;\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        affiliatedWithNapaStore: false,\r\n        anInstallerCustomer: false,\r\n\r\n        fullName: \"\",\r\n        emailAddress: \"\",\r\n\r\n        storeNumber: \"\",\r\n        servicingDC: \"\",\r\n        storeName: \"\",\r\n        storeAddress: \"\",\r\n\r\n        businessName: \"\",\r\n        businessAddress: \"\",\r\n\r\n        oeTurboPowerTurboChargers: false,\r\n        napaStartersAndAlternators: false,\r\n        napaPowerSport: false,\r\n        wilson: false,\r\n        premiumNapaSteering: false,\r\n        napaNewSteering: false,\r\n        formErrors: null,\r\n\r\n        isShowForm: true,\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        window.addEventListener('orientationchange', this.setScreenOrientation);\r\n        this.setScreenOrientation();\r\n    }\r\n\r\n    setScreenOrientation = () => {\r\n        if (window.matchMedia(\"(orientation: portrait)\").matches) {\r\n            console.log('orientation: portrait');\r\n            if (window.innerWidth <= 319) {\r\n                REEL_RADIUS = 105;\r\n            } else if (window.innerWidth >= 320 && window.innerWidth <= 400) {\r\n                REEL_RADIUS = 120;\r\n            } else if (window.innerWidth >= 401 && window.innerWidth <= 767) {\r\n                REEL_RADIUS = 150;\r\n            } else if (window.innerWidth >= 768 && window.innerWidth <= 1024) {\r\n                REEL_RADIUS = 300;\r\n            } else if (window.innerWidth >= 1025) {\r\n                REEL_RADIUS = 800;\r\n            }\r\n        }\r\n\r\n        if (window.matchMedia(\"(orientation: landscape)\").matches) {\r\n            console.log('orientation: landscape');\r\n            if (window.innerHeight <= 319) {\r\n                REEL_RADIUS = 105;\r\n            } else if (window.innerHeight >= 320 && window.innerHeight <= 400) {\r\n                REEL_RADIUS = 120;\r\n            } else if (window.innerHeight >= 401 && window.innerHeight <= 767) {\r\n                REEL_RADIUS = 300;\r\n            } else if (window.innerHeight >= 768 && window.innerHeight <= 1024) {\r\n                REEL_RADIUS = 300;\r\n            } else if (window.innerHeight >= 1025) {\r\n                REEL_RADIUS = 800;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    validateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    submitUserData = () => {\r\n\r\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\r\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\r\n        const {businessName, businessAddress} = this.state;\r\n        const {oeTurboPowerTurboChargers, napaStartersAndAlternators, napaPowerSport, wilson, premiumNapaSteering, napaNewSteering} = this.state;\r\n\r\n\r\n        var errors = {};\r\n\r\n        if (!fullName) {\r\n            errors['name'] = \"Full name is required\";\r\n        }\r\n        if (!emailAddress) {\r\n            errors['email'] = \"Email address is required\";\r\n        } else if (!this.validateEmail(emailAddress)) {\r\n            errors['email'] = \"Email address is not valid\";\r\n        }\r\n\r\n        if (affiliatedWithNapaStore) {\r\n            if (!storeNumber) {\r\n                errors['store_number'] = \"Store number is required\";\r\n            }\r\n            if (!servicingDC) {\r\n                errors['servicing_dc'] = \"Servicing DC is required\";\r\n            }\r\n            if (!storeName) {\r\n                errors['store_name'] = \"Store name is required\";\r\n            }\r\n            if (!storeAddress) {\r\n                errors['store_address'] = \"Store address is required\";\r\n            }\r\n        } else if (anInstallerCustomer) {\r\n            if (!businessName) {\r\n                errors['business_name'] = \"Business name is required\";\r\n            }\r\n            if (!businessAddress) {\r\n                errors['business_address'] = \"Business address is required\";\r\n            }\r\n        } else {\r\n            errors['user_type'] = \"Select who are you?\";\r\n        }\r\n\r\n\r\n        if (Object.keys(errors).length == 0) {\r\n            let postData = {\r\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\r\n                name: fullName,\r\n                email: emailAddress,\r\n            };\r\n            if (affiliatedWithNapaStore) {\r\n                postData['store_number'] = storeNumber;\r\n                postData['servicing_dc'] = servicingDC;\r\n                postData['store_name'] = storeName;\r\n                postData['store_address'] = storeAddress;\r\n            } else if (anInstallerCustomer) {\r\n                postData['business_name'] = businessName;\r\n                postData['business_address'] = businessAddress;\r\n            }\r\n\r\n            let products = [];\r\n            if (oeTurboPowerTurboChargers) {\r\n                products.push(formProducts.oeTurboPowerTurboChargers);\r\n            }\r\n            if (napaStartersAndAlternators) {\r\n                products.push(formProducts.napaStartersAndAlternators);\r\n            }\r\n            if (napaPowerSport) {\r\n                products.push(formProducts.napaPowerSport);\r\n            }\r\n            if (wilson) {\r\n                products.push(formProducts.wilson);\r\n            }\r\n            if (premiumNapaSteering) {\r\n                products.push(formProducts.premiumNapaSteering);\r\n            }\r\n            if (napaNewSteering) {\r\n                products.push(formProducts.napaNewSteering);\r\n            }\r\n\r\n            postData['products_buying'] = products.join(\"|\");\r\n\r\n            const {dispatch} = this.props;\r\n            dispatch(actions.submitFormData(postData)).then(() => {\r\n                setTimeout(() => {\r\n                    const {dataAddingStatus} = this.props;\r\n                    if (dataAddingStatus === 1) {\r\n                        this.setState({\r\n                            //isShowForm: true,\r\n\r\n                            affiliatedWithNapaStore: false,\r\n                            anInstallerCustomer: false,\r\n\r\n                            fullName: \"\",\r\n                            emailAddress: \"\",\r\n\r\n                            storeNumber: \"\",\r\n                            servicingDC: \"\",\r\n                            storeName: \"\",\r\n                            storeAddress: \"\",\r\n\r\n                            businessName: \"\",\r\n                            businessAddress: \"\",\r\n\r\n                            oeTurboPowerTurboChargers: false,\r\n                            napaStartersAndAlternators: false,\r\n                            napaPowerSport: false,\r\n                            wilson: false,\r\n                            premiumNapaSteering: false,\r\n                            napaNewSteering: false,\r\n                            formErrors: null,\r\n                        });\r\n                    }\r\n                }, 500);\r\n            });\r\n        } else {\r\n            this.setState({formErrors: errors});\r\n        }\r\n    }\r\n\r\n    handleProductChange = (e, product) => {\r\n        if (!checkboxwait) {\r\n            checkboxwait = true;\r\n            const newState = {};\r\n            newState[product] = !this.state[product];\r\n            this.setState({...this.state, ...newState});\r\n            setTimeout(() => {\r\n                checkboxwait = false;\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {dataAddingStatus, dataAddingError} = this.props;\r\n\r\n        return (\r\n            <LoadingOverlay\r\n                active={dataAddingStatus == -1}\r\n                spinner\r\n                text='Connecting....'\r\n            >\r\n                <div className=\"spin-page-container\">\r\n                    <div className={'slot-machine-container'}>\r\n\r\n                        <img\r\n                            className={'spin-bg-image'}\r\n                            style={{opacity: 1}}\r\n                            src={'images/spinbackground.png'}/>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.isShowForm && (\r\n                            <div className=\"container\">\r\n                                <div className={'form-container'}>\r\n                                    <Container className={'heading-form'}>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className={'heading1'}>PRE-QUALIFY FOR THE</div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className={'heading2'}>BIG RACE</div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <h4 className={'heading3'}>\r\n                                                    To begin, please answer a few simple questions:\r\n                                                </h4>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Container>\r\n                                    <Container className={'option-form'}>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className={'heading4'}>\r\n                                                    ARE YOU AFFILIATED WITH A NAPA STORE OR ARE YOU AN INSTALLER CUSTOMER?\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Row>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.affiliatedWithNapaStore}\r\n                                                    onChange={e => {\r\n                                                        this.setState({\r\n                                                            affiliatedWithNapaStore: true,\r\n                                                            anInstallerCustomer: false\r\n                                                        });\r\n                                                    }}\r\n                                                >NAPA store</FormCheckbox>\r\n                                            </Col>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.anInstallerCustomer}\r\n                                                    onChange={e => {\r\n                                                        this.setState({\r\n                                                            affiliatedWithNapaStore: false,\r\n                                                            anInstallerCustomer: true\r\n                                                        });\r\n                                                    }}\r\n                                                >\r\n                                                    Installer customer\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        {\r\n                                            (this.state.formErrors && this.state.formErrors['user_type']) && (\r\n                                                <Row>\r\n                                                    <Col sm={12}>\r\n                                                        <div className={'input-error'}>\r\n                                                            {this.state.formErrors['user_type']}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            )\r\n                                        }\r\n\r\n                                    </Container>\r\n\r\n\r\n                                    <Container className={'input-form'}>\r\n                                        <Row>\r\n                                            <Col sm={12} md={3}>\r\n                                                <span className={'input-label'}>Full Name</span>\r\n                                            </Col>\r\n                                            <Col sm={12} md={9}>\r\n                                                <FormInput\r\n                                                    className=\"input-field\"\r\n                                                    value={this.state.fullName}\r\n                                                    onChange={(e) => this.setState({fullName: e.target.value})}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            (this.state.formErrors && this.state.formErrors['name']) && (\r\n                                                <Row>\r\n                                                    <Col sm={12} md={3}></Col>\r\n                                                    <Col sm={12} md={9}>\r\n                                                        <div className={'input-error'}>\r\n                                                            {this.state.formErrors['name']}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            )\r\n                                        }\r\n\r\n                                        <Row>\r\n                                            <Col sm={12} md={3}>\r\n                                                <span className={'input-label'}>Email Address</span>\r\n                                            </Col>\r\n                                            <Col sm={12} md={9}>\r\n                                                <FormInput\r\n                                                    className=\"input-field\"\r\n                                                    type={\"email\"}\r\n                                                    value={this.state.emailAddress}\r\n                                                    onChange={(e) => this.setState({emailAddress: e.target.value})}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            (this.state.formErrors && this.state.formErrors['email']) && (\r\n                                                <Row>\r\n                                                    <Col sm={12} md={3}></Col>\r\n                                                    <Col sm={12} md={9}>\r\n                                                        <div className={'input-error'}>\r\n                                                            {this.state.formErrors['email']}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            )\r\n                                        }\r\n\r\n                                        {\r\n                                            this.state.affiliatedWithNapaStore && (\r\n                                                <React.Fragment>\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Store number</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.storeNumber}\r\n                                                                onChange={(e) => this.setState({storeNumber: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['store_number']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['store_number']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Servicing DC</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.servicingDC}\r\n                                                                onChange={(e) => this.setState({servicingDC: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['servicing_dc']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Store Name</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.storeName}\r\n                                                                onChange={(e) => this.setState({storeName: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['store_name']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['store_name']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Store Address</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.storeAddress}\r\n                                                                onChange={(e) => this.setState({storeAddress: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['store_address']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['store_address']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n\r\n\r\n                                        {\r\n                                            this.state.anInstallerCustomer && (\r\n                                                <React.Fragment>\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Business Name</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.businessName}\r\n                                                                onChange={(e) => this.setState({businessName: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['business_name']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['business_name']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={3}>\r\n                                                            <span className={'input-label'}>Business Address</span>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={9}>\r\n                                                            <FormInput\r\n                                                                className=\"input-field\"\r\n                                                                value={this.state.businessAddress}\r\n                                                                onChange={(e) => this.setState({businessAddress: e.target.value})}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {\r\n                                                        (this.state.formErrors && this.state.formErrors['business_address']) && (\r\n                                                            <Row>\r\n                                                                <Col sm={12} md={3}></Col>\r\n                                                                <Col sm={12} md={9}>\r\n                                                                    <div className={'input-error'}>\r\n                                                                        {this.state.formErrors['business_address']}\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        )\r\n                                                    }\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n\r\n\r\n                                    </Container>\r\n\r\n\r\n                                    <Container className={'product-choose-form'}>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className={'heading4'}>\r\n                                                    WHAT PRODUCTS DO YOU CURRENTLY PURCHASE FROM NAPA?\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Row>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.oeTurboPowerTurboChargers}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'oeTurboPowerTurboChargers');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.oeTurboPowerTurboChargers}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.napaStartersAndAlternators}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'napaStartersAndAlternators');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.napaStartersAndAlternators}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Row>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.napaPowerSport}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'napaPowerSport');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.napaPowerSport}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.wilson}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'wilson');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.wilson}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Row>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.premiumNapaSteering}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'premiumNapaSteering');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.premiumNapaSteering}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                            <Col sm={12} md={6}>\r\n                                                <FormCheckbox\r\n                                                    checked={this.state.napaNewSteering}\r\n                                                    onChange={e => {\r\n                                                        this.handleProductChange(e, 'napaNewSteering');\r\n                                                    }}\r\n                                                >\r\n                                                    {formProducts.napaNewSteering}\r\n                                                </FormCheckbox>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Container>\r\n\r\n                                    {\r\n                                        dataAddingStatus == 0 && (\r\n                                            <Alert theme=\"danger\">{dataAddingError}</Alert>\r\n                                        )\r\n                                    }\r\n\r\n                                    <Container className={'btn-view'}>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button className={'play-btn'} pill onClick={() => {\r\n                                                    this.submitUserData();\r\n                                                }}>Submit</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n                </div>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {dataAddingStatus, error} = state.form;\r\n    return {\r\n        dataAddingStatus,\r\n        dataAddingError: error\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Form);\r\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Login.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    Form,\n    FormGroup,\n    FormInput,\n    Alert\n} from \"shards-react\";\n\nclass Login extends Component {\n    state = {\n        userName: \"\",\n        userPassword: \"\",\n        loading: false,\n        submitted: false\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n        const userStr = localStorage.getItem('user_data');\n        if (userStr) {\n            try {\n                const user = JSON.parse(userStr);\n                if (user) {\n                    this.props.history.push(\"/admin/dashboard\");\n                }\n            } catch (e) {\n\n            }\n        }\n    }\n\n    doLogin = () => {\n        this.setState({submitted: true});\n        const {userName, userPassword} = this.state;\n        const {dispatch} = this.props;\n        if (userName && userPassword) {\n            dispatch(actions.doLogin({\n                email: userName,\n                password: userPassword\n            })).then(() => {\n                setTimeout(() => {\n                    const {loginStatus} = this.props;\n                    if (loginStatus === 1) {\n                        this.props.history.push(\"/admin/dashboard\");\n                    }\n                }, 500);\n            });\n        }\n    }\n\n    render() {\n        const {loginStatus, user, loginError} = this.props;\n\n        return (\n            <LoadingOverlay\n                active={loginStatus == -1}\n                spinner\n                text='Logging In'\n            >\n                <div className=\"login-page-container\">\n                    <Card title=\"Login\" className=\"login-card\">\n                        <CardHeader><h3>Login to admin panel</h3></CardHeader>\n                        <CardBody>\n\n                            {\n                                loginStatus == 0 && (\n                                    <Alert theme=\"danger\">{loginError}</Alert>\n                                )\n                            }\n                            {\n                                loginStatus == 1 && (\n                                    <Alert theme=\"success\">Login Success</Alert>\n                                )\n                            }\n                            <Form>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Username</label>\n                                    <FormInput\n                                        id=\"username\"\n                                        type={'email'}\n                                        value={this.state.userName}\n                                        onChange={(e) => this.setState({userName: e.target.value})}\n                                    />\n\n                                    {\n                                        (this.state.submitted && !this.state.userName) && (\n                                            <div className={'input-error'}>\n                                                Username is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                                <FormGroup>\n                                    <label htmlFor=\"username\">Password</label>\n                                    <FormInput id=\"username\"\n                                               type={\"password\"}\n                                               value={this.state.userPassword}\n                                               onChange={(e) => this.setState({userPassword: e.target.value})}/>\n                                    {\n                                        (this.state.submitted && !this.state.userPassword) && (\n                                            <div className={'input-error'}>\n                                                Password is required\n                                            </div>\n                                        )\n                                    }\n                                </FormGroup>\n                            </Form>\n\n\n                        </CardBody>\n                        <CardFooter>\n                            <Button block squared theme=\"secondary\" onClick={() => {\n                                this.doLogin();\n                            }}>\n                                Login\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {loginStatus, user, error} = state.user;\n    return {\n        loginStatus,\n        user,\n        loginError: error\n    };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React from \"react\";\r\nimport {Nav, NavbarBrand, NavItem, Navbar, NavLink} from \"shards-react\";\r\n\r\nconst NavbarPartial=(props)=>{\r\n    return(\r\n        <Navbar  type=\"dark\" theme=\"dark\" expand=\"md\">\r\n            <NavbarBrand href=\"#\">NAPA Panel</NavbarBrand>\r\n\r\n            <Nav navbar>\r\n                <NavItem>\r\n                    <NavLink href={'/admin/dashboard'}>\r\n                        Dashboard\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink href={'/admin/form-list'}>\r\n                        Form\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink href=\"#\" onClick={() => {\r\n                        localStorage.removeItem('user_data');\r\n                        props.prop.history.push(\"/admin/login\");\r\n                    }}>\r\n                        Logout\r\n                    </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavbarPartial;","import React from \"react\";\r\nimport {Button} from \"shards-react\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nconst CsvImport=(props)=>{\r\n    return(\r\n        <CSVLink\r\n            data={props.csvData}\r\n            asyncOnClick={true}\r\n            target=\"_blank\"\r\n            filename={props.filename}\r\n        >\r\n            <Button squared theme=\"secondary\" className={\"export-btn\"}>\r\n                Export\r\n            </Button>\r\n        </CSVLink>\r\n    );\r\n}\r\n\r\nexport default CsvImport;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport \"./Dashboard.scss\";\nimport {Link} from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {faEdit, faTrash, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {CSVLink} from \"react-csv\";\nimport * as moment from 'moment';\nimport NavbarPartial from '../Partials/NavbarPartial';\nimport CsvImport from '../Partials/CsvImport';\n\nimport {\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    FormInput,\n    Button,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    ModalFooter,\n    Container,\n    Row,\n    Col,\n    Alert,\n    FormCheckbox\n} from \"shards-react\";\nimport {napaProducts} from \"../../constants\";\n\nlet checkboxwait = false;\n\nclass Dashboard extends Component {\n    state = {\n        affiliatedWithNapaStore: false,\n        anInstallerCustomer: false,\n\n        fullName: \"\",\n        emailAddress: \"\",\n\n        storeNumber: \"\",\n        servicingDC: \"\",\n        storeName: \"\",\n        storeAddress: \"\",\n\n        businessName: \"\",\n        businessAddress: \"\",\n\n        city: \"\",\n        stateName: \"\",\n        zip: \"\",\n\n        napaNewElectrical: false,\n        wilson: false,\n        premiumPlus: false,\n        premiumSteering: false,\n        powerSupport: false,\n        newSteering: false,\n        formErrors: null,\n\n        showConfirmDeleteModal: false,\n        showUserDataModel: false,\n\n        selectedUserData: null\n    };\n\n\n    componentWillMount() {\n    }\n\n    componentDidMount() {\n        const userStr = localStorage.getItem('user_data');\n        if (userStr) {\n            try {\n                const user = JSON.parse(userStr);\n                if (user.id && user.email) {\n                    this.getUsersDataList();\n                } else {\n                    this.props.history.push(\"/admin/login\");\n                }\n            } catch (e) {\n                this.props.history.push(\"/admin/login\");\n            }\n        } else {\n            this.props.history.push(\"/admin/login\");\n        }\n    }\n\n    getUsersDataList = () => {\n        const {dispatch} = this.props;\n        dispatch(actions.userDataList({})).then(() => {\n\n        });\n    }\n\n    deleteUserData = (userDataId) => {\n        const {dispatch} = this.props;\n        dispatch(actions.deleteUserData({\n            id: userDataId\n        })).then(() => {\n            setTimeout(() => {\n                const {dataDeleteStatus} = this.props;\n                if (dataDeleteStatus === 1) {\n                    this.setState({showConfirmDeleteModal: false});\n                }\n            }, 500);\n        });\n    }\n\n    updateUserData = () => {\n\n        const {selectedUserData} = this.state;\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress, city, stateName, zip} = this.state;\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\n        const {businessName, businessAddress} = this.state;\n        const {napaNewElectrical, wilson, premiumPlus, premiumSteering, powerSupport, newSteering} = this.state;\n\n\n        var errors = {};\n\n        if (!fullName) {\n            errors['name'] = \"Full name is required\";\n        }\n\n        if (!city) {\n            errors['city'] = \"City is required\";\n        }\n        if (!stateName) {\n            errors['state'] = \"State  is required\";\n        }\n        if (!zip) {\n            errors['zip'] = \"Zip is required\";\n        }\n\n        if (!emailAddress) {\n            errors['email'] = \"Email address is required\";\n        } else if (!this.validateEmail(emailAddress)) {\n            errors['email'] = \"Email address is not valid\";\n        }\n\n        if (affiliatedWithNapaStore) {\n            if (!storeNumber) {\n                errors['store_number'] = \"Store number is required\";\n            }\n            if (!servicingDC) {\n                errors['servicing_dc'] = \"Servicing DC is required\";\n            }\n            if (!storeName) {\n                errors['store_name'] = \"Store name is required\";\n            }\n            if (!storeAddress) {\n                errors['store_address'] = \"Store street is required\";\n            }\n        } else if (anInstallerCustomer) {\n            if (!businessName) {\n                errors['business_name'] = \"Business name is required\";\n            }\n            if (!businessAddress) {\n                errors['business_address'] = \"Business street is required\";\n            }\n        } else {\n            errors['user_type'] = \"Select who are you?\";\n        }\n\n\n        if (Object.keys(errors).length == 0) {\n            let postData = {\n                id: selectedUserData._id,\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\n                name: fullName,\n                email: emailAddress,\n                city: city,\n                state: stateName,\n                zip: zip\n            };\n            if (affiliatedWithNapaStore) {\n                postData['store_number'] = storeNumber;\n                postData['servicing_dc'] = servicingDC;\n                postData['store_name'] = storeName;\n                postData['store_address'] = storeAddress;\n            } else if (anInstallerCustomer) {\n                postData['business_name'] = businessName;\n                postData['business_address'] = businessAddress;\n            }\n\n            let products = [];\n            if (napaNewElectrical) {\n                products.push(napaProducts.napaNewElectrical);\n            }\n            if (wilson) {\n                products.push(napaProducts.wilson);\n            }\n            if (premiumPlus) {\n                products.push(napaProducts.premiumPlus);\n            }\n            if (premiumSteering) {\n                products.push(napaProducts.premiumSteering);\n            }\n            if (powerSupport) {\n                products.push(napaProducts.powerSupport);\n            }\n            if (newSteering) {\n                products.push(napaProducts.newSteering);\n            }\n\n            postData['products_buying'] = products.join(\"|\");\n\n            const {dispatch} = this.props;\n            dispatch(actions.updateUserData(postData)).then(() => {\n                setTimeout(() => {\n                    const {dataUpdateStatus} = this.props;\n                    if (dataUpdateStatus === 1) {\n                        this.closeUserModal();\n                    }\n                }, 500);\n            });\n        } else {\n            this.setState({formErrors: errors});\n        }\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    closeUserModal = () => {\n        this.setState({\n            showUserDataModel: false,\n            selectedUserData: null,\n\n            affiliatedWithNapaStore: false,\n            anInstallerCustomer: false,\n\n            fullName: \"\",\n            emailAddress: \"\",\n\n            storeNumber: \"\",\n            servicingDC: \"\",\n            storeName: \"\",\n            storeAddress: \"\",\n\n            businessName: \"\",\n            businessAddress: \"\",\n\n            city: \"\",\n            stateName: \"\",\n            zip: \"\",\n\n            napaNewElectrical: false,\n            wilson: false,\n            premiumPlus: false,\n            premiumSteering: false,\n            powerSupport: false,\n            newSteering: false,\n            formErrors: null,\n        });\n    }\n\n\n    showEditUserDataModal = (data) => {\n\n\n        let states = {\n            showUserDataModel: true,\n            selectedUserData: data,\n\n            affiliatedWithNapaStore: (data.user_type == 'affiliated_with_napa_store'),\n            anInstallerCustomer: (data.user_type == 'installer_customer'),\n\n            fullName: data.name,\n            emailAddress: data.email,\n\n            storeNumber: data.store_number,\n            servicingDC: data.servicing_dc,\n            storeName: data.store_name,\n            storeAddress: data.store_address,\n\n            businessName: data.business_name,\n            businessAddress: data.business_address,\n\n            city: data.city,\n            stateName: data.state,\n            zip: data.zip,\n\n            napaNewElectrical: false,\n            wilson: false,\n            premiumPlus: false,\n            premiumSteering: false,\n            powerSupport: false,\n            newSteering: false,\n            formErrors: null,\n        };\n\n        const products = data.products_buying.split(\"|\");\n\n        products.map((product) => {\n            if (product === napaProducts.napaNewElectrical) {\n                states['napaNewElectrical'] = true;\n            }\n            if (product === napaProducts.wilson) {\n                states['wilson'] = true;\n            }\n            if (product === napaProducts.premiumPlus) {\n                states['premiumPlus'] = true;\n            }\n            if (product === napaProducts.premiumSteering) {\n                states['premiumSteering'] = true;\n            }\n            if (product === napaProducts.powerSupport) {\n                states['powerSupport'] = true;\n            }\n            if (product === napaProducts.newSteering) {\n                states['newSteering'] = true;\n            }\n\n        });\n\n        this.setState(states);\n    }\n\n\n    formatCsvExport = (list) => {\n        let formattedData = [\n            [\n                'No.',\n                'User Type',\n                'Full Name',\n                'Email Address',\n                'Product Buying',\n                'Store Number',\n                'Servicing DC',\n                'Store Name',\n                'Store Street',\n                'Business Name',\n                'Business Street',\n                'City',\n                'State',\n                'Zip',\n                'Date'\n            ]\n        ];\n        if (list) {\n            list.map((data, key) => {\n                formattedData.push([\n                    key + 1,\n                    (data.user_type == 'affiliated_with_napa_store') ? 'affiliated with a NAPA store' : 'an installer customer',\n                    data.name,\n                    data.email,\n                    data.products_buying,\n                    data.store_number,\n                    data.servicing_dc,\n                    data.store_name,\n                    data.store_address,\n                    data.business_name,\n                    data.business_address,\n                    data.city,\n                    data.state,\n                    data.zip,\n                    moment(data.Created_date).format('DD-MM-YYYY')\n                ]);\n            });\n        }\n        console.log(JSON.stringify(formattedData));\n        return formattedData;\n    }\n\n    handleProductChange = (e, product) => {\n        if (!checkboxwait) {\n            checkboxwait = true;\n            const newState = {};\n            newState[product] = !this.state[product];\n            this.setState({...this.state, ...newState});\n            setTimeout(() => {\n                checkboxwait = false;\n            }, 200);\n        }\n    }\n\n    render() {\n        const {dataListStatus, userDataList, dataListError, dataDeleteStatus, dataDeleteError} = this.props;\n        const {dataUpdateStatus, dataUpdateError} = this.props;\n        let csvData = this.formatCsvExport(userDataList);\n\n        return (\n            <LoadingOverlay\n                active={dataListStatus === -1 || dataDeleteStatus === -1 || dataUpdateStatus === -1}\n                spinner\n                text='Connecting...'\n            >\n                <div className=\"dashboard-page-container\">\n                    <NavbarPartial prop={this.props}/>\n\n                    {\n                        (userDataList && userDataList.length > 0) && (\n                            <CsvImport csvData={csvData} filename={'napa_user_list.csv'} />\n                        )\n                    }\n\n                    <table className={\"table-view\"}>\n                        <tr>\n                            <th>No.</th>\n                            <th>User Type</th>\n                            <th>Full Name</th>\n                            <th>Email</th>\n                            <th>City</th>\n                            <th>State</th>\n                            <th>Zip</th>\n                            <th>Products Buying</th>\n                            <th>Date</th>\n                            <th>Options</th>\n                        </tr>\n                        <tbody>\n                        {\n                            userDataList && userDataList.map((data, key) => {\n                                return (\n                                    <tr>\n                                        <td>{key + 1}</td>\n                                        <td>{data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'}</td>\n                                        <td>{data.name}</td>\n                                        <td>{data.email}</td>\n                                        <td>{data.city}</td>\n                                        <td>{data.state}</td>\n                                        <td>{data.zip}</td>\n                                        <td>{data.products_buying}</td>\n                                        <td>{moment(data.Created_date).format('DD-MM-YYYY')}</td>\n                                        <td className={'options'}>\n                                            <Button className={'option-btn'} onClick={() => {\n                                                this.showEditUserDataModal(data);\n                                            }}><FontAwesomeIcon icon={faEdit}/></Button>\n                                            <Button className={'option-btn delete'} onClick={() => {\n                                                this.setState({\n                                                    showConfirmDeleteModal: true,\n                                                    selectedUserData: data,\n                                                });\n                                            }}><FontAwesomeIcon\n                                                icon={faTrash}/></Button>\n\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <Modal centered={true} className={'userdata-edit-modal'} open={this.state.showUserDataModel}\n                       toggle={() => {\n                           this.setState({showUserDataModel: !this.state.showUserDataModel});\n                       }}>\n                    <ModalHeader>Edit User Data</ModalHeader>\n                    <ModalBody>\n                        <div className={'form-container'}>\n                            <Container className={'option-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            ARE YOU?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.affiliatedWithNapaStore}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: true,\n                                                    anInstallerCustomer: false\n                                                });\n                                            }}\n                                        >affiliated with a NAPA store</FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.anInstallerCustomer}\n                                            onChange={e => {\n                                                this.setState({\n                                                    affiliatedWithNapaStore: false,\n                                                    anInstallerCustomer: true\n                                                });\n                                            }}\n                                        >\n                                            an installer customer\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n                            </Container>\n\n                            <Container className={'input-form'}>\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Full Name</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.fullName}\n                                            onChange={(e) => this.setState({fullName: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['name']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['name']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Email address</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            type={\"email\"}\n                                            value={this.state.emailAddress}\n                                            onChange={(e) => this.setState({emailAddress: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['email']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['email']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.affiliatedWithNapaStore && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store number</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeNumber}\n                                                        onChange={(e) => this.setState({storeNumber: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_number']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_number']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Servicing DC</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.servicingDC}\n                                                        onChange={(e) => this.setState({servicingDC: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['servicing_dc']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeName}\n                                                        onChange={(e) => this.setState({storeName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Store street</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.storeAddress}\n                                                        onChange={(e) => this.setState({storeAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['store_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['store_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                                {\n                                    this.state.anInstallerCustomer && (\n                                        <React.Fragment>\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Name</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessName}\n                                                        onChange={(e) => this.setState({businessName: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_name']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_name']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n\n                                            <Row>\n                                                <Col sm={12} md={4}>\n                                                    <span className={'input-label'}>Business Street</span>\n                                                </Col>\n                                                <Col sm={12} md={8}>\n                                                    <FormInput\n                                                        className=\"input-field\"\n                                                        value={this.state.businessAddress}\n                                                        onChange={(e) => this.setState({businessAddress: e.target.value})}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            {\n                                                (this.state.formErrors && this.state.formErrors['business_address']) && (\n                                                    <Row>\n                                                        <Col sm={12} md={4}></Col>\n                                                        <Col sm={12} md={8}>\n                                                            <div className={'input-error'}>\n                                                                {this.state.formErrors['business_address']}\n                                                            </div>\n                                                        </Col>\n                                                    </Row>\n                                                )\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>City</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.city}\n                                            onChange={(e) => this.setState({city: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['city']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['city']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>State</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.stateName}\n                                            onChange={(e) => this.setState({stateName: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['state']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['state']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n\n\n                                <Row>\n                                    <Col sm={12} md={4}>\n                                        <span className={'input-label'}>Zip</span>\n                                    </Col>\n                                    <Col sm={12} md={8}>\n                                        <FormInput\n                                            className=\"input-field\"\n                                            value={this.state.zip}\n                                            onChange={(e) => this.setState({zip: e.target.value})}\n                                        />\n                                    </Col>\n                                </Row>\n                                {\n                                    (this.state.formErrors && this.state.formErrors['zip']) && (\n                                        <Row>\n                                            <Col sm={12} md={4}></Col>\n                                            <Col sm={12} md={8}>\n                                                <div className={'input-error'}>\n                                                    {this.state.formErrors['zip']}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    )\n                                }\n                            </Container>\n\n\n                            <Container className={'product-choose-form'}>\n                                <Row>\n                                    <Col>\n                                        <div className={'heading4'}>\n                                            WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.napaNewElectrical}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'napaNewElectrical');\n                                            }}\n                                        >\n                                            {napaProducts.napaNewElectrical}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.wilson}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'wilson');\n                                            }}\n                                        >\n                                            {napaProducts.wilson}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumPlus}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'premiumPlus');\n                                            }}\n                                        >\n                                            {napaProducts.premiumPlus}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.premiumSteering}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'premiumSteering');\n                                            }}\n                                        >\n                                            {napaProducts.premiumSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.powerSupport}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'powerSupport');\n                                            }}\n                                        >\n                                            {napaProducts.powerSupport}\n                                        </FormCheckbox>\n                                    </Col>\n                                    <Col sm={12} md={6}>\n                                        <FormCheckbox\n                                            checked={this.state.newSteering}\n                                            onChange={e => {\n                                                this.handleProductChange(e, 'newSteering');\n                                            }}\n                                        >\n                                            {napaProducts.newSteering}\n                                        </FormCheckbox>\n                                    </Col>\n                                </Row>\n\n                            </Container>\n\n                            {\n                                dataUpdateStatus == 0 && (\n                                    <Alert theme=\"danger\">{dataUpdateError}</Alert>\n                                )\n                            }\n\n                        </div>\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button className={'play-btn'} onClick={() => {\n                            this.updateUserData();\n                        }} theme={'success'}>Save</Button>\n                        <Button theme={'dark'} className={'play-btn'} onClick={() => {\n                            this.closeUserModal();\n                        }}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n\n                <Modal open={this.state.showConfirmDeleteModal} toggle={() => {\n                    this.setState({showConfirmDeleteModal: false})\n                }}>\n                    <ModalHeader>Confirm!</ModalHeader>\n                    <ModalBody>\n                        Do you really want to remove this user data?\n                        {\n                            dataDeleteStatus == 0 && (\n                                <Alert theme=\"danger\">{dataDeleteError}</Alert>\n                            )\n                        }\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button theme={'danger'} onClick={() => {\n                            this.deleteUserData(this.state.selectedUserData._id);\n                        }}>YES</Button>\n                        <Button theme={'dark'} onClick={() => {\n                            this.setState({showConfirmDeleteModal: false});\n                        }}>NO</Button>\n                    </ModalFooter>\n                </Modal>\n            </LoadingOverlay>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {dataListStatus, dataDeleteStatus, userDataList, dataListError, dataDeleteError, dataUpdateStatus, dataUpdateError} = state.user;\n    return {\n        dataListStatus,\n        dataDeleteStatus,\n        userDataList,\n        dataListError,\n        dataDeleteError,\n        dataUpdateStatus,\n        dataUpdateError\n    };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport \"../Dashboard/Dashboard.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport {faEdit, faTrash, faChevronRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport * as moment from 'moment';\r\nimport NavbarPartial from '../Partials/NavbarPartial';\r\nimport CsvImport from '../Partials/CsvImport';\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    FormInput,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    FormCheckbox\r\n} from \"shards-react\";\r\nimport {formProducts} from \"../../constants\";\r\n\r\nlet checkboxwait = false;\r\n\r\nclass FormList extends Component {\r\n    state = {\r\n        affiliatedWithNapaStore: false,\r\n        anInstallerCustomer: false,\r\n\r\n        fullName: \"\",\r\n        emailAddress: \"\",\r\n\r\n        storeNumber: \"\",\r\n        servicingDC: \"\",\r\n        storeName: \"\",\r\n        storeAddress: \"\",\r\n\r\n        businessName: \"\",\r\n        businessAddress: \"\",\r\n\r\n        oeTurboPowerTurboChargers: false,\r\n        napaStartersAndAlternators: false,\r\n        napaPowerSport: false,\r\n        wilson: false,\r\n        premiumNapaSteering: false,\r\n        napaNewSteering: false,\r\n        formErrors: null,\r\n\r\n        showConfirmDeleteModal: false,\r\n        showUserDataModel: false,\r\n\r\n        selectedUserData: null\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userStr = localStorage.getItem('user_data');\r\n        if (userStr) {\r\n            try {\r\n                const user = JSON.parse(userStr);\r\n                if (user.id && user.email) {\r\n                    this.getUsersDataList();\r\n                } else {\r\n                    this.props.history.push(\"/admin/login\");\r\n                }\r\n            } catch (e) {\r\n                this.props.history.push(\"/admin/login\");\r\n            }\r\n        } else {\r\n            this.props.history.push(\"/admin/login\");\r\n        }\r\n    }\r\n\r\n    getUsersDataList = () => {\r\n        const {dispatch} = this.props;\r\n        dispatch(actions.formDataList({})).then(() => {\r\n\r\n        });\r\n    }\r\n\r\n    deleteUserData = (userDataId) => {\r\n        const {dispatch} = this.props;\r\n        dispatch(actions.deleteFormData({\r\n            id: userDataId\r\n        })).then(() => {\r\n            setTimeout(() => {\r\n                const {dataDeleteStatus} = this.props;\r\n                if (dataDeleteStatus === 1) {\r\n                    this.setState({showConfirmDeleteModal: false});\r\n                }\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    updateUserData = () => {\r\n\r\n        const {selectedUserData} = this.state;\r\n        const {affiliatedWithNapaStore, anInstallerCustomer, fullName, emailAddress} = this.state;\r\n        const {storeNumber, servicingDC, storeName, storeAddress} = this.state;\r\n        const {businessName, businessAddress} = this.state;\r\n        const {oeTurboPowerTurboChargers, napaStartersAndAlternators, napaPowerSport, wilson, premiumNapaSteering, napaNewSteering} = this.state;\r\n\r\n\r\n        var errors = {};\r\n\r\n        if (!fullName) {\r\n            errors['name'] = \"Full name is required\";\r\n        }\r\n        if (!emailAddress) {\r\n            errors['email'] = \"Email address is required\";\r\n        } else if (!this.validateEmail(emailAddress)) {\r\n            errors['email'] = \"Email address is not valid\";\r\n        }\r\n\r\n        if (affiliatedWithNapaStore) {\r\n            if (!storeNumber) {\r\n                errors['store_number'] = \"Store number is required\";\r\n            }\r\n            if (!servicingDC) {\r\n                errors['servicing_dc'] = \"Servicing DC is required\";\r\n            }\r\n            if (!storeName) {\r\n                errors['store_name'] = \"Store name is required\";\r\n            }\r\n            if (!storeAddress) {\r\n                errors['store_address'] = \"Store address is required\";\r\n            }\r\n        } else if (anInstallerCustomer) {\r\n            if (!businessName) {\r\n                errors['business_name'] = \"Business name is required\";\r\n            }\r\n            if (!businessAddress) {\r\n                errors['business_address'] = \"Business address is required\";\r\n            }\r\n        } else {\r\n            errors['user_type'] = \"Select who are you?\";\r\n        }\r\n\r\n\r\n        if (Object.keys(errors).length == 0) {\r\n            let postData = {\r\n                id: selectedUserData._id,\r\n                user_type: affiliatedWithNapaStore ? 'affiliated_with_napa_store' : 'installer_customer',\r\n                name: fullName,\r\n                email: emailAddress\r\n            };\r\n            if (affiliatedWithNapaStore) {\r\n                postData['store_number'] = storeNumber;\r\n                postData['servicing_dc'] = servicingDC;\r\n                postData['store_name'] = storeName;\r\n                postData['store_address'] = storeAddress;\r\n            } else if (anInstallerCustomer) {\r\n                postData['business_name'] = businessName;\r\n                postData['business_address'] = businessAddress;\r\n            }\r\n\r\n            let products = [];\r\n            if (oeTurboPowerTurboChargers) {\r\n                products.push(formProducts.oeTurboPowerTurboChargers);\r\n            }\r\n            if (napaStartersAndAlternators) {\r\n                products.push(formProducts.napaStartersAndAlternators);\r\n            }\r\n            if (napaPowerSport) {\r\n                products.push(formProducts.napaPowerSport);\r\n            }\r\n            if (wilson) {\r\n                products.push(formProducts.wilson);\r\n            }\r\n            if (premiumNapaSteering) {\r\n                products.push(formProducts.premiumNapaSteering);\r\n            }\r\n            if (napaNewSteering) {\r\n                products.push(formProducts.napaNewSteering);\r\n            }\r\n\r\n            postData['products_buying'] = products.join(\"|\");\r\n\r\n            const {dispatch} = this.props;\r\n            dispatch(actions.updateFormData(postData)).then(() => {\r\n                setTimeout(() => {\r\n                    const {dataUpdateStatus} = this.props;\r\n                    if (dataUpdateStatus === 1) {\r\n                        this.closeUserModal();\r\n                    }\r\n                }, 500);\r\n            });\r\n        } else {\r\n            this.setState({formErrors: errors});\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    closeUserModal = () => {\r\n        this.setState({\r\n            showUserDataModel: false,\r\n            selectedUserData: null,\r\n\r\n            affiliatedWithNapaStore: false,\r\n            anInstallerCustomer: false,\r\n\r\n            fullName: \"\",\r\n            emailAddress: \"\",\r\n\r\n            storeNumber: \"\",\r\n            servicingDC: \"\",\r\n            storeName: \"\",\r\n            storeAddress: \"\",\r\n\r\n            businessName: \"\",\r\n            businessAddress: \"\",\r\n\r\n            oeTurboPowerTurboChargers: false,\r\n            napaStartersAndAlternators: false,\r\n            napaPowerSport: false,\r\n            wilson: false,\r\n            premiumNapaSteering: false,\r\n            napaNewSteering: false,\r\n            formErrors: null,\r\n        });\r\n    }\r\n\r\n\r\n    showEditUserDataModal = (data) => {\r\n\r\n\r\n        let states = {\r\n            showUserDataModel: true,\r\n            selectedUserData: data,\r\n\r\n            affiliatedWithNapaStore: (data.user_type == 'affiliated_with_napa_store'),\r\n            anInstallerCustomer: (data.user_type == 'installer_customer'),\r\n\r\n            fullName: data.name,\r\n            emailAddress: data.email,\r\n\r\n            storeNumber: data.store_number,\r\n            servicingDC: data.servicing_dc,\r\n            storeName: data.store_name,\r\n            storeAddress: data.store_address,\r\n\r\n            businessName: data.business_name,\r\n            businessAddress: data.business_address,\r\n\r\n            oeTurboPowerTurboChargers: false,\r\n            napaStartersAndAlternators: false,\r\n            napaPowerSport: false,\r\n            wilson: false,\r\n            premiumNapaSteering: false,\r\n            napaNewSteering: false,\r\n            formErrors: null,\r\n        };\r\n\r\n        const products = data.products_buying.split(\"|\");\r\n\r\n        products.map((product) => {\r\n            if (product === formProducts.oeTurboPowerTurboChargers) {\r\n                states['oeTurboPowerTurboChargers'] = true;\r\n            }\r\n            if (product === formProducts.napaStartersAndAlternators) {\r\n                states['napaStartersAndAlternators'] = true;\r\n            }\r\n            if (product === formProducts.napaPowerSport) {\r\n                states['napaPowerSport'] = true;\r\n            }\r\n            if (product === formProducts.wilson) {\r\n                states['wilson'] = true;\r\n            }\r\n            if (product === formProducts.premiumNapaSteering) {\r\n                states['premiumNapaSteering'] = true;\r\n            }\r\n            if (product === formProducts.napaNewSteering) {\r\n                states['napaNewSteering'] = true;\r\n            }\r\n\r\n        });\r\n\r\n        this.setState(states);\r\n    }\r\n\r\n\r\n    formatCsvExport = (list) => {\r\n        let formattedData = [\r\n            [\r\n                'No.',\r\n                'User Type',\r\n                'Full Name',\r\n                'Email Address',\r\n                'Product Buying',\r\n                'Store Number',\r\n                'Servicing DC',\r\n                'Store Name',\r\n                'Store Address',\r\n                'Business Name',\r\n                'Business Address',\r\n                'Date'\r\n            ]\r\n        ];\r\n        if (list) {\r\n            list.map((data, key) => {\r\n                formattedData.push([\r\n                    key + 1,\r\n                    (data.user_type == 'affiliated_with_napa_store') ? 'affiliated with a NAPA store' : 'an installer customer',\r\n                    data.name,\r\n                    data.email,\r\n                    data.products_buying,\r\n                    data.store_number,\r\n                    data.servicing_dc,\r\n                    data.store_name,\r\n                    data.store_address,\r\n                    data.business_name,\r\n                    data.business_address,\r\n                    moment(data.Created_date).format('DD-MM-YYYY')\r\n                ]);\r\n            });\r\n        }\r\n        console.log(JSON.stringify(formattedData));\r\n        return formattedData;\r\n    }\r\n\r\n    handleProductChange = (e, product) => {\r\n        if (!checkboxwait) {\r\n            checkboxwait = true;\r\n            const newState = {};\r\n            newState[product] = !this.state[product];\r\n            this.setState({...this.state, ...newState});\r\n            setTimeout(() => {\r\n                checkboxwait = false;\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {dataListStatus, formDataList, dataListError, dataDeleteStatus, dataDeleteError} = this.props;\r\n        const {dataUpdateStatus, dataUpdateError} = this.props;\r\n        let csvData = this.formatCsvExport(formDataList);\r\n\r\n        return (\r\n            <LoadingOverlay\r\n                active={dataListStatus === -1 || dataDeleteStatus === -1 || dataUpdateStatus === -1}\r\n                spinner\r\n                text='Connecting...'\r\n            >\r\n                <div className=\"dashboard-page-container\">\r\n                    <NavbarPartial prop={this.props}/>\r\n\r\n                    {\r\n                        (formDataList && formDataList.length > 0) && (\r\n                            <CsvImport csvData={csvData} filename={'form_list.csv'} />\r\n                        )\r\n                    }\r\n\r\n                    <table className={\"table-view\"}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>No.</th>\r\n                            <th>User Type</th>\r\n                            <th>Full Name</th>\r\n                            <th>Email</th>\r\n                            <th>Products Buying</th>\r\n                            <th>Date</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            formDataList && formDataList.map((data, key) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{key + 1}</td>\r\n                                        <td>{data.user_type == 'affiliated_with_napa_store' ? 'affiliated with a NAPA store' : 'an installer customer'}</td>\r\n                                        <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>{data.products_buying}</td>\r\n                                        <td>{moment(data.Created_date).format('DD-MM-YYYY')}</td>\r\n                                        <td className={'options'}>\r\n                                            <Button className={'option-btn'} onClick={() => {\r\n                                                this.showEditUserDataModal(data);\r\n                                            }}><FontAwesomeIcon icon={faEdit}/></Button>\r\n                                            <Button className={'option-btn delete'} onClick={() => {\r\n                                                this.setState({\r\n                                                    showConfirmDeleteModal: true,\r\n                                                    selectedUserData: data,\r\n                                                });\r\n                                            }}><FontAwesomeIcon\r\n                                                icon={faTrash}/></Button>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n                <Modal centered={true} className={'userdata-edit-modal'} open={this.state.showUserDataModel}\r\n                       toggle={() => {\r\n                           this.setState({showUserDataModel: !this.state.showUserDataModel});\r\n                       }}>\r\n                    <ModalHeader>Edit Form Data</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className={'form-container'}>\r\n                            <Container className={'option-form'}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={'heading4'}>\r\n                                            ARE YOU AFFILIATED WITH A NAPA STORE OR ARE YOU AN INSTALLER CUSTOMER?\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.affiliatedWithNapaStore}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    affiliatedWithNapaStore: true,\r\n                                                    anInstallerCustomer: false\r\n                                                });\r\n                                            }}\r\n                                        >NAPA store</FormCheckbox>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.anInstallerCustomer}\r\n                                            onChange={e => {\r\n                                                this.setState({\r\n                                                    affiliatedWithNapaStore: false,\r\n                                                    anInstallerCustomer: true\r\n                                                });\r\n                                            }}\r\n                                        >\r\n                                            Installer customer\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n\r\n                            <Container className={'input-form'}>\r\n                                <Row>\r\n                                    <Col sm={12} md={4}>\r\n                                        <span className={'input-label'}>Full Name</span>\r\n                                    </Col>\r\n                                    <Col sm={12} md={8}>\r\n                                        <FormInput\r\n                                            className=\"input-field\"\r\n                                            value={this.state.fullName}\r\n                                            onChange={(e) => this.setState({fullName: e.target.value})}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    (this.state.formErrors && this.state.formErrors['name']) && (\r\n                                        <Row>\r\n                                            <Col sm={12} md={4}></Col>\r\n                                            <Col sm={12} md={8}>\r\n                                                <div className={'input-error'}>\r\n                                                    {this.state.formErrors['name']}\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                <Row>\r\n                                    <Col sm={12} md={4}>\r\n                                        <span className={'input-label'}>Email address</span>\r\n                                    </Col>\r\n                                    <Col sm={12} md={8}>\r\n                                        <FormInput\r\n                                            className=\"input-field\"\r\n                                            type={\"email\"}\r\n                                            value={this.state.emailAddress}\r\n                                            onChange={(e) => this.setState({emailAddress: e.target.value})}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    (this.state.formErrors && this.state.formErrors['email']) && (\r\n                                        <Row>\r\n                                            <Col sm={12} md={4}></Col>\r\n                                            <Col sm={12} md={8}>\r\n                                                <div className={'input-error'}>\r\n                                                    {this.state.formErrors['email']}\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                {\r\n                                    this.state.affiliatedWithNapaStore && (\r\n                                        <React.Fragment>\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Store number</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.storeNumber}\r\n                                                        onChange={(e) => this.setState({storeNumber: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['store_number']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['store_number']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n\r\n\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Servicing DC</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.servicingDC}\r\n                                                        onChange={(e) => this.setState({servicingDC: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['servicing_dc']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['servicing_dc']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Store Name</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.storeName}\r\n                                                        onChange={(e) => this.setState({storeName: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['store_name']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['store_name']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Store Address</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.storeAddress}\r\n                                                        onChange={(e) => this.setState({storeAddress: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['store_address']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['store_address']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                {\r\n                                    this.state.anInstallerCustomer && (\r\n                                        <React.Fragment>\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Business Name</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.businessName}\r\n                                                        onChange={(e) => this.setState({businessName: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['business_name']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['business_name']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n\r\n                                            <Row>\r\n                                                <Col sm={12} md={4}>\r\n                                                    <span className={'input-label'}>Business Address</span>\r\n                                                </Col>\r\n                                                <Col sm={12} md={8}>\r\n                                                    <FormInput\r\n                                                        className=\"input-field\"\r\n                                                        value={this.state.businessAddress}\r\n                                                        onChange={(e) => this.setState({businessAddress: e.target.value})}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {\r\n                                                (this.state.formErrors && this.state.formErrors['business_address']) && (\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={4}></Col>\r\n                                                        <Col sm={12} md={8}>\r\n                                                            <div className={'input-error'}>\r\n                                                                {this.state.formErrors['business_address']}\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )\r\n                                            }\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n\r\n                            </Container>\r\n\r\n\r\n                            <Container className={'product-choose-form'}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={'heading4'}>\r\n                                            WHAT PRODUCTS ARE YOU CURRENTLY BUYING FROM NAPA?\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.oeTurboPowerTurboChargers}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'oeTurboPowerTurboChargers');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.oeTurboPowerTurboChargers}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.napaStartersAndAlternators}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'napaStartersAndAlternators');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.napaStartersAndAlternators}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.napaPowerSport}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'napaPowerSport');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.napaPowerSport}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.wilson}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'wilson');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.wilson}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.premiumNapaSteering}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'premiumNapaSteering');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.premiumNapaSteering}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                    <Col sm={12} md={6}>\r\n                                        <FormCheckbox\r\n                                            checked={this.state.napaNewSteering}\r\n                                            onChange={e => {\r\n                                                this.handleProductChange(e, 'napaNewSteering');\r\n                                            }}\r\n                                        >\r\n                                            {formProducts.napaNewSteering}\r\n                                        </FormCheckbox>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Container>\r\n\r\n                            {\r\n                                dataUpdateStatus == 0 && (\r\n                                    <Alert theme=\"danger\">{dataUpdateError}</Alert>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button className={'play-btn'} onClick={() => {\r\n                            this.updateUserData();\r\n                        }} theme={'success'}>Save</Button>\r\n                        <Button theme={'dark'} className={'play-btn'} onClick={() => {\r\n                            this.closeUserModal();\r\n                        }}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.showConfirmDeleteModal} toggle={() => {\r\n                    this.setState({showConfirmDeleteModal: false})\r\n                }}>\r\n                    <ModalHeader>Confirm!</ModalHeader>\r\n                    <ModalBody>\r\n                        Do you really want to remove this form data?\r\n                        {\r\n                            dataDeleteStatus == 0 && (\r\n                                <Alert theme=\"danger\">{dataDeleteError}</Alert>\r\n                            )\r\n                        }\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button theme={'danger'} onClick={() => {\r\n                            this.deleteUserData(this.state.selectedUserData._id);\r\n                        }}>YES</Button>\r\n                        <Button theme={'dark'} onClick={() => {\r\n                            this.setState({showConfirmDeleteModal: false});\r\n                        }}>NO</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </LoadingOverlay>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {dataListStatus, dataDeleteStatus, formDataList, dataListError, dataDeleteError, dataUpdateStatus, dataUpdateError} = state.form;\r\n    return {\r\n        dataListStatus,\r\n        dataDeleteStatus,\r\n        formDataList,\r\n        dataListError,\r\n        dataDeleteError,\r\n        dataUpdateStatus,\r\n        dataUpdateError\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(FormList);\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n    Route,\n    Switch,\n    BrowserRouter,\n} from 'react-router-dom';\nimport {\n    CSSTransition,\n    TransitionGroup\n} from 'react-transition-group';\nimport Spin from \"./pages/Spin/Spin\";\nimport Form from \"./pages/Form/Form\";\nimport Login from \"./pages-admin/Login/Login\";\nimport Dashboard from \"./pages-admin/Dashboard/Dashboard\";\nimport FormList from \"./pages-admin/FormList/FormList\";\nimport DocumentMeta from 'react-document-meta';\n\nconst supportsHistory = 'pushState' in window.history;\n\nfunction App() {\n    const meta = {\n        meta: {\n          charset: 'utf-8',\n          name: {\n            viewport: 'width=device-width, initial-scale=1.0, maximum-scale=1.0,user-scalable=0'\n          }\n        }\n      };\n    return (\n        <DocumentMeta {...meta}>\n        <div className=\"App\">\n            <BrowserRouter forceRefresh={!supportsHistory}>\n                <Route\n                    render={({location}) => {\n                        const {pathname} = location;\n                        return (\n                            <TransitionGroup>\n                                <CSSTransition\n                                    key={pathname}\n                                    classNames=\"page\"\n                                    timeout={{\n                                        enter: 1000,\n                                        exit: 1000,\n                                    }}\n                                >\n                                    <Route\n                                        location={location}\n                                        render={() => (\n                                            <Switch>\n                                                <Route\n                                                    exact\n                                                    path=\"/\"\n                                                    component={Spin}\n                                                />\n                                                <Route\n                                                    exact\n                                                    path=\"/form\"\n                                                    component={Form}\n                                                />\n                                                <Route\n                                                    path=\"/admin/login\"\n                                                    component={Login}\n                                                />\n                                                <Route\n                                                    path=\"/admin/dashboard\"\n                                                    component={Dashboard}\n                                                />\n                                                <Route\n                                                    path=\"/admin/form-list\"\n                                                    component={FormList}\n                                                />\n                                            </Switch>\n                                        )}\n                                    />\n                                </CSSTransition>\n                            </TransitionGroup>\n                        );\n                    }}\n                />\n            </BrowserRouter>\n        </div>\n        </DocumentMeta>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport user from './userReducer';\nimport form from './formReducer';\n\nexport default combineReducers({\n    user,\n    form\n});\n","import {userConstants} from '../constants';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                ...state,\n                loginStatus: -1\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                ...state,\n                loginStatus: 1,\n                user: action.data\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {\n                ...state,\n                loginStatus: 0,\n                error: action.error\n            };\n\n\n        case userConstants.USERDATA_SUBMIT_REQUEST:\n            return {\n                ...state,\n                dataAddingStatus: -1\n            };\n        case userConstants.USERDATA_SUBMIT_SUCCESS:\n            return {\n                ...state,\n                dataAddingStatus: 1\n            };\n        case userConstants.USERDATA_SUBMIT_FAILURE:\n            return {\n                ...state,\n                dataAddingStatus: 0,\n                error: action.error\n            };\n\n\n        case userConstants.USERDATA_LIST_REQUEST:\n            return {\n                ...state,\n                dataListStatus: -1\n            };\n        case userConstants.USERDATA_LIST_SUCCESS:\n            return {\n                ...state,\n                dataListStatus: 1,\n                userDataList: action.data\n            };\n        case userConstants.USERDATA_LIST_FAILURE:\n            return {\n                ...state,\n                dataListStatus: 0,\n                dataListError: action.error\n            };\n\n\n        case userConstants.USERDATA_DELETE_REQUEST:\n            return {\n                ...state,\n                dataDeleteStatus: -1\n            };\n        case userConstants.USERDATA_DELETE_SUCCESS:\n            return {\n                ...state,\n                dataDeleteStatus: 1,\n                userDataList: action.data\n            };\n        case userConstants.USERDATA_DELETE_FAILURE:\n            return {\n                ...state,\n                dataDeleteStatus: 0,\n                dataDeleteError: action.error\n            };\n\n\n        case userConstants.USERDATA_UPDATE_REQUEST:\n            return {\n                ...state,\n                dataUpdateStatus: -1\n            };\n        case userConstants.USERDATA_UPDATE_SUCCESS:\n            return {\n                ...state,\n                dataUpdateStatus: 1,\n                userDataList: action.data\n            };\n        case userConstants.USERDATA_UPDATE_FAILURE:\n            return {\n                ...state,\n                dataUpdateStatus: 0,\n                dataUpdateError: action.error\n            };\n\n        default:\n            return state\n    }\n};\n","import {formConstants} from '../constants';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case formConstants.FORMDATA_SUBMIT_REQUEST:\r\n            return {\r\n                ...state,\r\n                dataAddingStatus: -1\r\n            };\r\n        case formConstants.FORMDATA_SUBMIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataAddingStatus: 1\r\n            };\r\n        case formConstants.FORMDATA_SUBMIT_FAILURE:\r\n            return {\r\n                ...state,\r\n                dataAddingStatus: 0,\r\n                error: action.error\r\n            };\r\n\r\n\r\n        case formConstants.FORMDATA_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                dataListStatus: -1\r\n            };\r\n        case formConstants.FORMDATA_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataListStatus: 1,\r\n                formDataList: action.data\r\n            };\r\n        case formConstants.FORMDATA_LIST_FAILURE:\r\n            return {\r\n                ...state,\r\n                dataListStatus: 0,\r\n                dataListError: action.error\r\n            };\r\n\r\n\r\n        case formConstants.FORMDATA_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                dataDeleteStatus: -1\r\n            };\r\n        case formConstants.FORMDATA_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataDeleteStatus: 1,\r\n                formDataList: action.data\r\n            };\r\n        case formConstants.FORMDATA_DELETE_FAILURE:\r\n            return {\r\n                ...state,\r\n                dataDeleteStatus: 0,\r\n                dataDeleteError: action.error\r\n            };\r\n\r\n\r\n        case formConstants.FORMDATA_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                dataUpdateStatus: -1\r\n            };\r\n        case formConstants.FORMDATA_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataUpdateStatus: 1,\r\n                formDataList: action.data\r\n            };\r\n        case formConstants.FORMDATA_UPDATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                dataUpdateStatus: 0,\r\n                dataUpdateError: action.error\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport {createStore, applyMiddleware} from 'redux';\n\nconst rootElement = document.getElementById('root');\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}